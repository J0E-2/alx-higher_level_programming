>>> matrix = __import__('2-matrix_divided').matrix_divided
>>> matrix(['Check1', 'check2'], 10)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix({'numb1' : 25, 'numb2' : 50, 'numb3' : 75}, 20)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix([[50, 100],[20, 15, 35]], 5)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix([[10, 'two'], ['one', 'two']], 2)
Traceback (most recent call last):
   ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix([[10, 25], [50, 'seventy']], 5)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix([[10, 'one'], [50, 25]], 5)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix([[10, 5, 15], [15, 20, 25]], 'five')
Traceback (most recent call last):
   ...
TypeError: div must be a number

>>> matrix([[10, 5, 15], [15, 20, 25]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix([[20, 30, 40], [35, 10, 8]], 7)
[[2.86, 4.29, 5.71], [5.0, 1.43, 1.14]]

>>> matrix([[10, 5, 20], [15, 10, 25]], 5)
[[2.0, 1.0, 4.0], [3.0, 2.0, 5.0]]

>>> matrix([[]], 2)
Traceback (most recent call last):
   ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
